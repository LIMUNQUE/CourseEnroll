---
//import courses from "../../courses.json";
import Layout from "../../layouts/Layout.astro";
import { collection, getDocs } from "firebase/firestore";
import { db } from "../../firebase/config";

// Crea un array para almacenar los cursos
let courses = [];

// Referencia a la colecci贸n "Cursos" en la base de datos
const productosRef = collection(db, "Cursos");

// Funci贸n asincr贸nica para obtener los cursos
async function getCourses() {
  try {
    const resp = await getDocs(productosRef);
    resp.forEach((doc) => {
      const course = {
        ...doc.data(),
        id: doc.id,
      };
      courses.push(course, { id: doc.id });
    });
  } catch (error) {
    console.error("Error al obtener los cursos:", error);
  }
}

// Llama a la funci贸n para obtener los cursos
await getCourses();

const { id } = Astro.params;

const course = courses.find((course) => course.id === id);
---

{
  course && (
    <Layout title={course.title}>
      <section
        transition:animate="slide"
        class="flex gap-7 justify-center items-center flex-wrap px-8% py-20"
      >
        <img
          class="rounded-xl w-[630px]"
          src={course.imageUrl}
          alt={course.title}
        />
        <div class="flex flex-col gap-4">
          <h2 class="text-transparent bg-clip-text bg-gradient-to-br from-indigo-600 from-10% via-primary via-30% to-green-600 font-semibold">
            {course.title}
          </h2>
          <p class="max-w-md">{course.long_description}</p>
          <a class="button" href={course.form}>
            {" "}
            <span>Registrarse</span>
          </a>
        </div>
      </section>
    </Layout>
  )
}

<style>
  .section-cards {
    width: 100%;
    height: auto;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 60px;
  }
  main {
    width: 320px;
    height: 360px;
    border-radius: 8px;
    backdrop-filter: blur(0px) saturate(100%);
    -webkit-backdrop-filter: blur(16px) saturate(180%);
    background-color: rgba(14, 13, 13, 0.2);
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  main h2 {
    text-align: center;
  }
  main p {
    font-size: 13px;
    max-width: 310px;
    text-align: center;
  }

  main:hover {
    transform: scale(1.01);
    transition: all 0.3s ease;
  }

  main img {
    width: 100%;
    height: 210px;
    border-radius: 8px;
  }

  main span {
    display: flex;
    justify-content: space-between;
    padding: 0 10px;
  }

  .button {
    --color: #000000;
    width: 95px;
    height: 28px;
    background-color: transparent;
    border-radius: 5px;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    transition: 0.5s;
    font-weight: 400;
    font-size: 12px;
    font-weight: 600;
    border: 1px solid;
    text-transform: uppercase;
    color: var(--color);
    z-index: 1;
    text-decoration: none;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .button::before,
  .button::after {
    content: "";
    display: block;
    width: 55px;
    height: 55px;
    transform: translate(-50%, -50%);
    position: absolute;
    border-radius: 50%;
    z-index: -1;
    background: linear-gradient(10deg, blue, green);
    transition: 1s ease;
  }

  .button::before {
    top: -1em;
    left: -1em;
  }

  .button::after {
    left: calc(100% + 1em);
    top: calc(100% + 1em);
  }

  .button:hover::before,
  .button:hover::after {
    height: 410px;
    width: 410px;
  }

  .button:hover {
    color: rgb(230, 219, 219);
  }

  .button:active {
    filter: brightness(0.8);
  }

  @media (width < 630px) {
    main {
      width: 300px;
    }
  }
</style>
